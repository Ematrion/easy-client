from easy_client import ApiFetcher
from easy_client.types import Header, ResponseData
from typing import Any

from .params import get_default_params

from {{ api_name }}.{{ api_name }}.config import settings


class {{ api_name|capitalize }}Fetcher(ApiFetcher):
    def __init__(self):
        # TODO: add {{ api_name|upper }}_API_URL to Settings in backend/config.py
        base_url = settings.{{ api_name|upper }}_API_URL
        
        # TODO: add {{ api_name|upper }}_API_KEY to Settings in backend/config.py
        headers = {
            "Authorization": f"Bearer {settings.{{ api_name|upper }}_API_KEY}",
            "Content-Type": "application/json",
        }

        # TODO: add default query params if needed
        params = {}

        # TODO: update content-type supports
        content = [
            "application/json",
            "application/xml",
            "text/html",
            "text/plain",
            "application/octet-stream",
            "image/",
            "video/"
        ]
        
        super().__init__(base_url, headers, params, content)
{% for endpoint in endpoints %}
    def fetch_{{ endpoint }}(self, headers: Header | None = None, **kwargs: Any) -> ResponseData:
    
        # TODO: edit params
        params = get_default_params("{{ endpoint }}")
        params.update(kwargs)
        
        return self._request_handler(settings.{{ endpoint|upper }}_URL, headers=headers, params=params)

{% endfor %}